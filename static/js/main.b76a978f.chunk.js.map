{"version":3,"sources":["actions.js","reducer.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["SET_LOADING","SET_STORIES","REMOVE_STORY","HANDLE_PAGE","HANDLE_SEARCH","setStoriesAction","data","hits","nbPages","type","payload","handleSearchAction","query","page","initialState","isLoading","reducer","state","action","console","log","filter","story","id","nextPage","prevPage","key","localStorage","getItem","JSON","parse","AppContext","createContext","ContextProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","results","pages","useEffect","setItem","stringify","Provider","value","removeStory","removeStoryAction","handleSearch","handlePage","handlePageAction","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","placeholder","onChange","target","Stories","map","item","webPublicationDate","slice","date2","Date","day","getDate","month","getMonth","webTitle","sectionName","getFullYear","pillarName","href","webUrl","onClick","bind","Buttons","disabled","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b76a978f.chunk.js","sourcesContent":["export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n\nexport const setLoadingAction = () => {\n    return { type: SET_LOADING }\n}\n\nexport const setStoriesAction = (data) => {\n    const { hits, nbPages } = data;\n    return {\n        type: SET_STORIES,\n        payload: {\n            hits: hits,\n            nbPages: nbPages\n        }\n    }\n}\n\nexport const removeStoryAction = (id) => {\n    return {\n        type: REMOVE_STORY,\n        payload: { id: id }\n    }\n}\n\nexport const handlePageAction = (value) => {\n    return {\n        type: HANDLE_PAGE,\n        payload: value\n    }\n}\n\n\nexport const handleSearchAction = (query, page) => {\n    return {\n        type: HANDLE_SEARCH,\n        payload: {\n            query: query,\n            page: page\n        }\n    }\n}\n\n","import { SET_LOADING, SET_STORIES, REMOVE_STORY, HANDLE_PAGE, HANDLE_SEARCH, } from './actions.js'\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: \"\",\n  page: 0,\n  nbPages: 0\n}\n\n\nconst reducer = (state = initialState, action) => {\n  // console.log(\"reducer\")\n  //debugger;\n  console.log(\"Reducer ->>>\", state);\n  switch (action.type) {\n    //-------------------------------------------------------------------------------------------------------------\n    case SET_LOADING:\n      return { ...state, isLoading: true }\n    //-------------------------------------------------------------------------------------------------------------\n    case SET_STORIES:\n      return {\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages\n      }\n    //-------------------------------------------------------------------------------------------------------------\n    case REMOVE_STORY:\n      return {\n        ...state,\n        hits: state.hits.filter(story => story.id !== action.payload.id)\n      }\n    //-------------------------------------------------------------------------------------------------------------\n    case HANDLE_SEARCH:\n      console.log(\"reducer\", state, action)\n      return {\n        ...state,\n        query: action.payload.query,\n        page: action.payload.page\n      }\n    //-------------------------------------------------------------------------------------------------------------\n    case HANDLE_PAGE:\n      if (action.payload === \"inc\") {\n        let nextPage = state.page + 1\n        if (nextPage > state.nbPages) {\n          nextPage = 0\n        }\n        return { ...state, page: nextPage }\n      }\n      else if (action.payload === \"dec\") {\n        let prevPage = state.page - 1\n        if (prevPage <= 1) {\n          prevPage = 1\n        }\n        return { ...state, page: prevPage }\n      }\n  }\n\n}\nexport default reducer\n","import React, { useContext, useEffect, useReducer, createContext } from 'react'\nimport {\n  setLoadingAction, setStoriesAction, removeStoryAction, handlePageAction, handleSearchAction,\n} from './actions.js'\nimport reducer from './reducer'\n\n\nconst key = \"4f30b443-f361-4a5a-9c4e-a09d421c9565\";\nconst query = \"\";\nlet url1 = `https://content.guardianapis.com/search?api-key=${key}`;\nconst url2 = `https://content.guardianapis.com/search?q=${query}&api-key=${key}`;\n\nconst getLocalStorage = () => {\n  let cart = localStorage.getItem(\"query\");\n  if (cart) {\n    return JSON.parse(localStorage.getItem(\"query\"))\n  } else {\n    return \"\"\n  }\n}\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: getLocalStorage(),\n  page: 1,\n  nbPages: 0\n}\n\nconst AppContext = createContext()\n\nconst ContextProvider = ({ children }) => {\n  // console.log(\"ContextProvider\")\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(\"STATE\", state)\n  const fetchStories = async (url) => {\n    console.log(\"fetchStories\", url)\n    dispatch(setLoadingAction())\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(\"ContextProvider_fetchStories come data from API-->\", data)\n      dispatch(setStoriesAction({ hits: data.response.results, nbPages: data.response.pages }))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const removeStory = (id) => {\n    dispatch(removeStoryAction(id))\n  }\n  const handleSearch = (query) => {\n    if (query != state.query) {\n      dispatch(handleSearchAction(query, 1))\n    } else {\n      dispatch(handleSearchAction(query, state.page))\n    }\n  }\n\n  const handlePage = (value) => {\n    dispatch(handlePageAction(value))\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"query\", JSON.stringify(state.query));\n    state.query\n      ? fetchStories(`https://content.guardianapis.com/search?page=${state.page}&q=${state.query}&api-key=${key}`)\n      : fetchStories(`https://content.guardianapis.com/search?page=${state.page}&api-key=${key}`)\n  }, [state.query, state.page])\n\n  return (\n    <AppContext.Provider value={{ ...state, removeStory, handleSearch, handlePage }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\n//Custom Hook, использован в Button.js SearchForm.js\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\n\n//Если не пользоваться кастомным хуком, испльзовать дефолтный useContext (Stories.js)\nexport { AppContext, ContextProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SearchForm = () => {\n  // console.log(\"SearchForm\")\n  const { query, handleSearch } = useGlobalContext()\n\n  return (\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\n      <h2>search  news</h2>\n      <input type='text' className='form-input' placeholder=\"search news by Content\" value={query} onChange={(e) => handleSearch(e.target.value)} />\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React, { useContext } from 'react'\nimport { AppContext } from './context'\n\n\nconst Stories = () => {\n  // console.log(\"Stories\")\n  const { isLoading, hits, removeStory } = useContext(AppContext)\n  if (isLoading) {\n    return <div className=\"loading\"> </div>\n  }\n  return (\n    <section>\n      {\n        hits.map(item => {\n          let data = item.webPublicationDate.slice(0, 19);\n          const date2 = new Date(data);\n          let day = date2.getDate();\n          day = day < 10 ? day = `0${day}` : day;\n          let month = date2.getMonth() + 1;\n          month = month < 10 ? month = `0${month}` : month;\n          return (\n            <article key={item.id}>\n              <h4 className='title'>{item.webTitle}</h4>\n              <div> Section Name: {item.sectionName} </div>\n              <div> Publication Date: {`${day}.${month}.${date2.getFullYear()}`} </div>\n              <div> Pillar Name: {item.pillarName} </div>\n              <div>\n                <a href={item.webUrl} className='read-link' target='_blank' > read more</a>\n                <button className='remove-btn' onClick={removeStory.bind(this, item.id)}> remove </button>\n              </div>\n            </article>\n          );\n        })\n      }\n    </section>\n  )\n}\n\nexport default Stories\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Buttons = () => {\n  //Navigation buttons\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext()\n\n  return (\n    <div className='btn-container'>\n      <button disabled={isLoading} onClick={() => handlePage('dec')}> Назад </button>\n      <p> {page} of {nbPages} </p>\n      <button disabled={isLoading} onClick={handlePage.bind(this, 'inc')}> Далее </button>\n    </div>\n  )\n}\n\nexport default Buttons\n","import React from 'react'\nimport { createStore } from \"redux\"\nimport { Provider as ReduxProvider } from \"react-redux\"\n\nimport reducer from \"./reducer.js\"\n//components\nimport SearchForm from './SearchForm'\nimport Stories from './Stories'\nimport Buttons from './Buttons'\n\nconst store = createStore(reducer);\n\nfunction App() {\n  return (\n    <ReduxProvider store={store}>\n      <SearchForm /> {/* search forom */}\n      <Buttons /> {/* navigation button */}\n      <Stories />  {/* stories*/}\n    </ReduxProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.js'\nimport { ContextProvider } from './context.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}